bool
char
char16
char32
char8
decimal128
decimal32
decimal64
float16
float32
float64
int128
int16
int256
int32
int64
int8
iptr
isize
object
string
uint128
uint16
uint256
uint32
uint64
uint8
uptr
usize
void
byte
and
and_eq
or
or_eq
xor
xor_eq
not
not_eq
bit_and
bit_or
bit_compl
__column__
__file__
__function__
__function_pretty__
__line__
__module__
__source_location__
abstract
add
addressof
addrspace
alias
align
alignas
alignof
array
as
assembly
assert
assume
async
atomic
attribute
auto
available
await
base
become
bitcast
body
borrow
box
break
callconv
case
cast
checked
class
columnmajor
compile
concept
const
ctor
continue
contravariant
covariant
debug
default
defer
delegate
delete
deprecated
dtor
discard
do
drop
dynamic
eager
else
enum
event
except
explicit
export
expression
extension
extern
false
field
file
final
finally
fixed
for
force
foreach
fraction
fragment
friend
from
function
generic
get
global
goto
groupshared
if
immutable
implementation
implicit
import
in
inherit
inject
inline
inout
interface
internal
invariant
is
lazy
let
likely
linksection
lock
loop
macro
managed
match
matrix
member
meta
mixin
module
move
mutable
nameof
namespace
native
new
noalias
nodiscard
noinline
noreturn
nosuspend
notnull
null
nullable
offsetof
operator
opaque
optional
out
overload
override
package
packed
parallel
params
partial
pragma
precise
private
property
protected
public
pure
raise
readonly
record
recursive
ref
reflect
register
reinterpret
remove
require
required
resume
retain
return
rowmajor
saturate
scalar
scope
section
self
set
shared
sizeof
slice
stackalloc
static
struct
super
suspend
switch
synchronized
tailcall
template
test
this
threadlocal
trait
transfer
true
try
tuple
type
typeof
unaligned
unbox
unchecked
undefined
uniform
union
unlikely
unmanaged
unreachable
unsafe
unsized
using
uuidof
value
var
vector
vendor
version
virtual
volatile
vtable
when
where
while
with
yield
~
!=
!
+=
++
+
-=
--
->
-
*=
*
/=
/
(
)
{
}
[
]
::
:
;
@
$
%=
%
^=
^
&&
&=
&
==
=>
=
\\
||
|=
|
,
<=
<<=
<<
<<<
>>>
<
>=
>>=
>>
>
??
?
...
..
.
_
r#class
r#enum
r#struct
r"raw string \t"
r#"raw string \n"#
r##" r#"inner\nraw\nstring"# "##
