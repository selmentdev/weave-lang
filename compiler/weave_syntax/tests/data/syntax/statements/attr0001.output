SourceFileSyntax
 SyntaxList
  CodeBlockItemSyntax
   ExpressionStatementSyntax
    IfExpressionSyntax
     IfKeyword <38:40> [2:0:2:2] 'if'
     SyntaxList
      AttributeListSyntax
       HashOpenBracketToken <41:43> [2:3:2:5] '#['
       SyntaxList
        AttributeSyntax
         IdentifierNameSyntax
          IdentifierToken <43:49> [2:5:2:11] 'Likely'
       CloseBracketToken <49:50> [2:11:2:12] ']'
     BinaryExpressionSyntax
      IdentifierNameSyntax
       IdentifierToken <51:52> [2:13:2:14] 'x'
      EqualsEqualsToken <53:55> [2:15:2:17] '=='
      LiteralExpressionSyntax
       IntegerLiteralToken <56:58> [2:18:2:20] '42'
     CodeBlockSyntax
      OpenBraceToken <59:60> [3:0:3:1] '{'
      SyntaxList
       CodeBlockItemSyntax
        ExpressionStatementSyntax
         InvocationExpressionSyntax
          IdentifierNameSyntax
           IdentifierToken <65:66> [4:4:4:5] 'a'
          ArgumentListSyntax
           OpenParenToken <66:67> [4:5:4:6] '('
           CloseParenToken <67:68> [4:6:4:7] ')'
        SemicolonToken <68:69> [4:7:4:8] ';'
      CloseBraceToken <70:71> [5:0:5:1] '}'
     ElseClauseSyntax
      ElseKeyword <72:76> [6:0:6:4] 'else'
      IfExpressionSyntax
       IfKeyword <77:79> [6:5:6:7] 'if'
       SyntaxList
        AttributeListSyntax
         HashOpenBracketToken <80:82> [6:8:6:10] '#['
         SyntaxList
          AttributeSyntax
           IdentifierNameSyntax
            IdentifierToken <82:90> [6:10:6:18] 'Unlikely'
         CloseBracketToken <90:91> [6:18:6:19] ']'
       BinaryExpressionSyntax
        IdentifierNameSyntax
         IdentifierToken <92:93> [6:20:6:21] 'x'
        EqualsEqualsToken <94:96> [6:22:6:24] '=='
        LiteralExpressionSyntax
         IntegerLiteralToken <97:99> [6:25:6:27] '43'
       CodeBlockSyntax
        OpenBraceToken <100:101> [7:0:7:1] '{'
        SyntaxList
         CodeBlockItemSyntax
          ExpressionStatementSyntax
           InvocationExpressionSyntax
            IdentifierNameSyntax
             IdentifierToken <106:107> [8:4:8:5] 'b'
            ArgumentListSyntax
             OpenParenToken <107:108> [8:5:8:6] '('
             CloseParenToken <108:109> [8:6:8:7] ')'
          SemicolonToken <109:110> [8:7:8:8] ';'
        CloseBraceToken <111:112> [9:0:9:1] '}'
       ElseClauseSyntax
        ElseKeyword <113:117> [10:0:10:4] 'else'
        CodeBlockSyntax
         OpenBraceToken <118:119> [11:0:11:1] '{'
         SyntaxList
          CodeBlockItemSyntax
           ExpressionStatementSyntax
            InvocationExpressionSyntax
             IdentifierNameSyntax
              IdentifierToken <124:125> [12:4:12:5] 'c'
             ArgumentListSyntax
              OpenParenToken <125:126> [12:5:12:6] '('
              CloseParenToken <126:127> [12:6:12:7] ')'
           SemicolonToken <127:128> [12:7:12:8] ';'
         CloseBraceToken <129:130> [13:0:13:1] '}'
  CodeBlockItemSyntax
   WhileStatementSyntax
    WhileKeyword <163:168> [17:0:17:5] 'while'
    SyntaxList
     AttributeListSyntax
      HashOpenBracketToken <169:171> [17:6:17:8] '#['
      SyntaxList
       AttributeSyntax
        IdentifierNameSyntax
         IdentifierToken <171:177> [17:8:17:14] 'Likely'
      CloseBracketToken <177:178> [17:14:17:15] ']'
    BinaryExpressionSyntax
     IdentifierNameSyntax
      IdentifierToken <179:180> [17:16:17:17] 'x'
     LessThanToken <181:182> [17:18:17:19] '<'
     LiteralExpressionSyntax
      IntegerLiteralToken <183:185> [17:20:17:22] '42'
    CodeBlockSyntax
     OpenBraceToken <186:187> [18:0:18:1] '{'
     SyntaxList
      CodeBlockItemSyntax
       ExpressionStatementSyntax
        InvocationExpressionSyntax
         IdentifierNameSyntax
          IdentifierToken <192:193> [19:4:19:5] 'a'
         ArgumentListSyntax
          OpenParenToken <193:194> [19:5:19:6] '('
          CloseParenToken <194:195> [19:6:19:7] ')'
       SemicolonToken <195:196> [19:7:19:8] ';'
      CodeBlockItemSyntax
       ExpressionStatementSyntax
        UnaryExpressionSyntax
         PlusPlusToken <201:203> [20:4:20:6] '++'
         IdentifierNameSyntax
          IdentifierToken <203:204> [20:6:20:7] 'x'
       SemicolonToken <204:205> [20:7:20:8] ';'
     CloseBraceToken <206:207> [21:0:21:1] '}'
 EndOfFileToken <208:208> [22:0:22:0] ''
